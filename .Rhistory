getwd()
write.csv(df_Counties,'My_Project/Counties.csv')
MetroTier = Metropolitan.or.Nonmetropolitan
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = MetroTier, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = MetroTier)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
MetroTier
MetroTier = Metropolitan.or.Nonmetropolitan
MetroTier <- Metropolitan.or.Nonmetropolitan
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = Metropolitan.or.Nonmetropolitan, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = Metropolitan.or.Nonmetropolitan)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
df_Counties
names(df_Counties)
runApp('BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)
getwd()
setwd('My_Project')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
df_Counties
names(df_Counties)
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = Metropolitan.or.Nonmetropolitan, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = Metropolitan.or.Nonmetropolitan)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
MetroTier = Metropolitan.or.Nonmetropolitan
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = MetroTier, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = MetroTier)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
names(df_Counties)[[31]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)[[41]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
factor((df_Counties)[[41]])
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = Tier, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = Tier)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
df_Counties$Tier1 =
factor(x = df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = Tier1, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = Tier1)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
getwd()
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyverse)
#setwd('Desktop/NYCDataScience/3. Data Analysis R/Project/My_Project')
getwd()
County_Health_Data <- read_excel("County Health Data.xlsx")
#View(County_Health_Data)
df <- County_Health_Data
#head(df)
colnames(df)[1] = 'Group' #renmae first column
colnames(df)[2] = 'Indicator'
colnames(df)[3] = 'Descriptor'
colnames(df)[4] = 'Source'
colnames(df)[5] = 'Link'
colnames(df)[8:length(colnames(df))] = df[1,8:length(colnames(df)) ] # the first row will be the header
df = df[-1, ] #remove row 1 now
df = df[,-6] #remove column 6 (no info)
df = df[,-length(df)]
#Factor Tier column
df$Tier1 =
factor(x = df$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
#clean up cols before transpose
df1 = df %>%
select(-Group, -Descriptor, -Source, -Link, -`Data year`)
head(df1)
long <- gather(df1,County,Value,-Indicator)
#long <- melt(df, id.vars=c('Indicator'))
head(long,10)
long1 <- long %>%
filter(!is.na(Indicator),              #remove na from Indicator col
Indicator!='Racial Disparity in Infant Mortality Rate', #remove rows with redundancy (from source)
Indicator!='Racial Disparity in Life Expectancy')
wide <- spread(long1, key=Indicator, value=Value)
#wide <- reshape(long, idvar='variable', timevar='Indicator', direction='wide')
head(wide,10)
view(wide)
#split NC from counties
df_NC <- wide %>%
filter(County=='NC')
df_Counties <- wide %>%
filter(County!='NC')
write.csv(df_Counties,'Counties.csv')
names(df_Counties)
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
names(df)
df1
long1
wide
view(df_Counties)
df = df[-1, ] #remove row 1 now
df = df[,-6] #remove column 6 (no info)
df = df[,-length(df)]
#Factor Tier column
df$Tier1 =
factor(x = df$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
#Factor Tier column
df$Tier1 =
factor(x = df$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
write.csv(df_Counties,'Counties.csv')
df_Counties$Tier1 =
factor(x = df$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
write.csv(df_Counties,'Counties.csv')
#Factor Tier column
df_Counties$Tier1 =
factor(x = df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
write.csv(df_Counties,'Counties.csv')
df_Counties %>%
# filter(States == input$States3 & Sex == input$Sex3 &
#          Year == input$Year3) %>%
ggplot(mapping = aes(x = Tier1, y = df_Counties$Diabetes.Prevalence)) +
geom_boxplot(aes(fill = Tier1)) + ggtitle("Diabetes Prevalence by input$MetroTier") +
xlab("Race") + ylab("Age")
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)[[53]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)[[53]]
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)
(df_Counties)[[54]]
(df_Counties)[[31]]
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
names(df_Counties)[[32]]
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)[[32]]
names(df_Counties)[[54]]
(df_Counties)[[54]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)
(df_Counties)[[32]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties$Tier1 =
factor(x = df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
write.csv(df_Counties,'Counties.csv')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
County_Health_Data <- read_excel("County Health Data.xlsx")
#View(County_Health_Data)
df <- County_Health_Data
colnames(df)
df <- County_Health_Data
#head(df)
colnames(df)[1] = 'Group' #renmae first column
colnames(df)[2] = 'Indicator'
colnames(df)[3] = 'Descriptor'
colnames(df)[4] = 'Source'
colnames(df)[5] = 'Link'
colnames(df)[8:length(colnames(df))] = df[1,8:length(colnames(df)) ] # the first row will be the header
df = df[-1, ] #remove row 1 now
df = df[,-6] #remove column 6 (no info)
df = df[,-length(df)]
#clean up cols before transpose
df1 = df %>%
select(-Group, -Descriptor, -Source, -Link, -`Data year`)
head(df1)
long <- gather(df1,County,Value,-Indicator)
#long <- melt(df, id.vars=c('Indicator'))
head(long,10)
long1 <- long %>%
filter(!is.na(Indicator),              #remove na from Indicator col
Indicator!='Racial Disparity in Infant Mortality Rate', #remove rows with redundancy (from source)
Indicator!='Racial Disparity in Life Expectancy')
wide <- spread(long1, key=Indicator, value=Value)
#wide <- reshape(long, idvar='variable', timevar='Indicator', direction='wide')
head(wide,10)
view(wide)
#split NC from counties
df_NC <- wide %>%
filter(County=='NC')
df_Counties <- wide %>%
filter(County!='NC')
names(df_Counties)
df_Counties$Tier1 =
factor(x = df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
names(df_Counties)
write.csv(df_Counties,'Counties.csv')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
df_Counties
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
names(df_Counties)[[53]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
view(df_Counties)
(df_Counties)[[53]]
df_Counties$Tier1
df_Counties <- wide %>%
filter(County!='NC')
names(df_Counties)
df_Counties$Tier1 =
factor(x = df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
df_Counties$Tier1
names(df_Counties)
#Factor Tier column
df_Counties$Tier1 =
factor(df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier"))
#Factor Tier column
df_Counties$Tier1
df_Counties$Tier1 =
factor(df_Counties$Tier,
levels = c(1,2,3),
labels = c("Tier1","Tier2","Tier3"))
df_Counties$Tier1
df_Counties$Tier
class(df_Counties$Tier)
County_Health_Data <- read_excel("County Health Data.xlsx")
#View(County_Health_Data)
df <- County_Health_Data
#head(df)
colnames(df)[1] = 'Group' #renmae first column
colnames(df)[2] = 'Indicator'
colnames(df)[3] = 'Descriptor'
colnames(df)[4] = 'Source'
colnames(df)[5] = 'Link'
colnames(df)[8:length(colnames(df))] = df[1,8:length(colnames(df)) ] # the first row will be the header
df = df[-1, ] #remove row 1 now
df = df[,-6] #remove column 6 (no info)
df = df[,-length(df)]
#clean up cols before transpose
df1 = df %>%
select(-Group, -Descriptor, -Source, -Link, -`Data year`)
head(df1)
long <- gather(df1,County,Value,-Indicator)
#long <- melt(df, id.vars=c('Indicator'))
head(long,10)
long1 <- long %>%
filter(!is.na(Indicator),              #remove na from Indicator col
Indicator!='Racial Disparity in Infant Mortality Rate', #remove rows with redundancy (from source)
Indicator!='Racial Disparity in Life Expectancy')
wide <- spread(long1, key=Indicator, value=Value)
#wide <- reshape(long, idvar='variable', timevar='Indicator', direction='wide')
head(wide,10)
df_NC <- wide %>%
filter(County=='NC')
df_Counties <- wide %>%
filter(County!='NC')
class(df_Counties$Tier)
df
#Factor Tier column
df_Counties$Tier1 =
factor(df_Counties$Tier,
levels = c('1.0','2.0','3.0'),
labels = c("Tier 1","Tier 2","Tier 3"))
df_Counties$Tier1
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
(df_Counties)[[53]]
write.csv(df_Counties,'Counties.csv')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)[[53]]
names(df_Counties)
df_Counties
rm(df_Counties)
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
names(df_Counties)
rm(df_Counties)
df_Counties <- wide %>%
filter(County!='NC')
#Factor Tier column
df_Counties$Tier1 =
factor(df_Counties$Tier,
levels = c('1.0','2.0','3.0'),
labels = c("Tier 1","Tier 2","Tier 3"))
write.csv(df_Counties,'Counties.csv')
names(df_Counties)
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
(df_Counties)[[53]]
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny/app copy 2.R')
runApp('NC_Diabetes.R')
getwd()
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
names(df_Counties)
write.csv(df_Counties,'Data/Counties.csv')
df_Counties = read.csv("Data/Counties.csv", stringsAsFactors = F)
view(df_Counties)
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
df_Counties = read.csv("Counties.csv", stringsAsFactors = F)
df_Counties = read.csv("Data/Counties.csv", stringsAsFactors = F)
(df_Counties)[[53]]
view(df_Counties)
names(df_Counties)
rm(df_Counties)
df_Counties <- wide %>%
filter(County!='NC')
#Factor Tier column
df_Counties$Tier1 =
factor(df_Counties$Tier,
levels = c('1.0','2.0','3.0'),
labels = c("Tier 1","Tier 2","Tier 3"))
write.csv(df_Counties,'Data/Counties.csv')
names(df_Counties)
df_Counties = read.csv("Data/Counties.csv", stringsAsFactors = F)
names(df_Counties)
(df_Counties)[[53]]
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/Cancer_Project/cancer')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('~/Desktop/NYCDataScience/3. Data Analysis R/Project/BrazilianEcommerce-master/BREcomShiny')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
runApp('NC_Diabetes.R')
getwd()
library(shiny); runApp('NC_Diabetes.R')
